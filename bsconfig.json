{
  "name": "lvca-bucklescript",
  "version": "0.1.0",
  "reason": { "react-jsx": 3 },
  "sources": [
    {
      "dir" : "src",
      "subdirs" : true,
      "generators" : [
        {
          "name" : "menhir",
          "edge" : ["LanguageParser.ml", "LanguageParser.mli", ":", "LanguageParser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["LanguageLexer.ml", ":", "LanguageLexer.mll"]
        },
        {
          "name" : "menhir-parserlib",
          "edge" : ["StaticsParser.ml", "StaticsParser.mli", ":", "StaticsParser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["StaticsLexer.ml", ":", "StaticsLexer.mll"]
        },
        {
          "name" : "menhir-parserlib",
          "edge" : ["DynamicsParser.ml", "DynamicsParser.mli", ":", "DynamicsParser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["DynamicsLexer.ml", ":", "DynamicsLexer.mll"]
        },
        {
          "name" : "menhir",
          "edge" : ["TermParser.ml", "TermParser.mli", ":", "TermParser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["TermLexer.ml", ":", "TermLexer.mll"]
        },
        {
          "name" : "menhir",
          "edge" : ["ConcreteSyntaxParser.ml", "ConcreteSyntaxParser.mli", ":", "ConcreteSyntaxParser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["ConcreteSyntaxLexer.ml", ":", "ConcreteSyntaxLexer.mll"]
        }
      ]
    },
    { "dir": "__tests__",
      "type": "dev"
    }
  ],
  "package-specs": {
    "module": "commonjs"
  },
  "suffix": ".bs.js",
  "bs-dependencies": [
    "bs-zarith",
    "reason-react"
  ],
  "bs-dev-dependencies": ["@glennsl/bs-jest"],
  "warnings": {
    "error" : "+101"
  },
  "refmt": 3,
  "generators" : [
    {
      "name" : "menhir-parserlib",
      "command": "menhir --table --base `echo $in | cut -f 1 -d '.'` `dirname $in`/ParserLib.mly $in"
    },
    {
      "name" : "menhir",
      "command": "menhir --table $in"
    },
    {
      "name" : "ocamllex",
      "command": "ocamllex $in"
    }
  ]
}
