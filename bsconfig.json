{
  "name": "lvca-bucklescript",
  "version": "0.1.0",
  "reason": { "react-jsx": 3 },
  "sources": [
    {
      "dir" : "src",
      "subdirs" : true,
      "generators" : [
        {
          "name" : "menhir",
          "edge" : ["Language_Parser.ml", "Language_Parser.mli", ":", "Language_Parser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["Language_Lexer.ml", ":", "Language_Lexer.mll"]
        },
        {
          "name" : "menhir-parserlib",
          "edge" : ["Statics_Parser.ml", "Statics_Parser.mli", ":", "Statics_Parser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["Statics_Lexer.ml", ":", "Statics_Lexer.mll"]
        },
        {
          "name" : "menhir-parserlib",
          "edge" : ["Dynamics_Parser.ml", "Dynamics_Parser.mli", ":", "Dynamics_Parser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["Dynamics_Lexer.ml", ":", "Dynamics_Lexer.mll"]
        },
        {
          "name" : "menhir",
          "edge" : ["Term_Parser.ml", "Term_Parser.mli", ":", "Term_Parser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["Term_Lexer.ml", ":", "Term_Lexer.mll"]
        },
        {
          "name" : "menhir",
          "edge" : ["ConcreteSyntax_Parser.ml", "ConcreteSyntax_Parser.mli", ":", "ConcreteSyntax_Parser.mly"]
        },
        {
          "name" : "ocamllex",
          "edge" : ["ConcreteSyntax_Lexer.ml", ":", "ConcreteSyntax_Lexer.mll"]
        }
      ]
    },
    { "dir": "__tests__",
      "type": "dev"
    }
  ],
  "package-specs": {
    "module": "commonjs"
  },
  "suffix": ".bs.js",
  "bs-dependencies": [
    "bs-zarith",
    "reason-react"
  ],
  "bs-dev-dependencies": ["@glennsl/bs-jest"],
  "warnings": {
    "error" : "+101"
  },
  "refmt": 3,
  "generators" : [
    {
      "name" : "menhir-parserlib",
      "command": "menhir --table --base `echo $in | cut -f 1 -d '.'` `dirname $in`/ParserLib.mly $in"
    },
    {
      "name" : "menhir",
      "command": "menhir --table $in"
    },
    {
      "name" : "ocamllex",
      "command": "ocamllex $in"
    }
  ]
}
