# 1 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
 
open ConcreteSyntax_Parser
open LexerUtil

module L = Lexing
module B = Buffer

# 10 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\227\255\228\255\081\000\160\000\238\000\031\000\234\255\
    \235\255\001\000\237\255\238\255\239\255\000\000\242\255\243\255\
    \244\255\245\255\246\255\247\255\248\255\250\255\251\255\252\255\
    \057\001\254\255\001\000\003\000\017\000\029\000\255\255\004\000\
    \241\255\236\255\022\000\027\000\038\000\025\000\233\255\039\000\
    \039\000\028\000\232\255\070\001\148\001\226\001\048\002\126\002\
    \239\002\250\255\251\255\004\000\254\255\240\002\252\255\253\255\
    \019\002\250\255\251\255\252\255\128\000\097\002\253\255\254\255\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\026\000\025\000\026\000\028\000\255\255\
    \255\255\028\000\255\255\255\255\255\255\015\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \002\000\255\255\001\000\000\000\006\000\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\026\000\026\000\026\000\026\000\024\000\
    \255\255\255\255\255\255\006\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\005\000\000\000\255\255\255\255\
    ";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\255\255\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\255\255\255\255\255\255\029\000\000\000\255\255\
    \000\000\000\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \053\000\000\000\000\000\255\255\000\000\053\000\000\000\000\000\
    \061\000\000\000\000\000\000\000\062\000\061\000\000\000\000\000\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\027\000\025\000\025\000\027\000\026\000\030\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \027\000\000\000\023\000\027\000\012\000\006\000\055\000\030\000\
    \022\000\021\000\031\000\000\000\007\000\009\000\014\000\028\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\013\000\010\000\016\000\032\000\015\000\033\000\
    \029\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\018\000\000\000\017\000\000\000\008\000\
    \054\000\003\000\003\000\003\000\003\000\003\000\005\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\020\000\011\000\019\000\003\000\039\000\
    \036\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\035\000\037\000\038\000\040\000\041\000\
    \042\000\034\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\004\000\000\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\000\000\000\000\063\000\000\000\000\000\000\000\
    \000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\000\000\000\000\000\000\000\000\004\000\
    \002\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\003\000\000\000\255\255\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\043\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\003\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \044\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\003\000\000\000\045\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\057\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\003\000\059\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\046\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\255\255\000\000\000\000\000\000\060\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\003\000\
    \255\255\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\047\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\052\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\050\000\255\255\058\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\051\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\049\000\
    \255\255";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\026\000\027\000\000\000\031\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\027\000\000\000\000\000\051\000\029\000\
    \000\000\000\000\029\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\013\000\000\000\009\000\
    \028\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \051\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\003\000\034\000\
    \035\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\006\000\036\000\037\000\039\000\040\000\
    \041\000\006\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\255\255\255\255\255\255\255\255\
    \003\000\255\255\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\255\255\004\000\255\255\255\255\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\255\255\255\255\060\000\255\255\255\255\255\255\
    \255\255\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\255\255\255\255\255\255\255\255\004\000\
    \000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\005\000\255\255\029\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\255\255\255\255\255\255\255\255\005\000\255\255\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\043\000\255\255\255\255\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \060\000\255\255\255\255\255\255\255\255\255\255\255\255\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\255\255\255\255\255\255\255\255\043\000\255\255\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\044\000\255\255\255\255\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\044\000\044\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\044\000\255\255\
    \255\255\255\255\255\255\044\000\255\255\044\000\044\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\044\000\045\000\
    \255\255\255\255\045\000\045\000\045\000\045\000\045\000\045\000\
    \045\000\045\000\045\000\045\000\255\255\056\000\255\255\255\255\
    \255\255\255\255\255\255\045\000\045\000\045\000\045\000\045\000\
    \045\000\045\000\045\000\045\000\045\000\045\000\045\000\045\000\
    \045\000\045\000\045\000\045\000\045\000\045\000\045\000\045\000\
    \045\000\045\000\045\000\045\000\045\000\255\255\255\255\255\255\
    \255\255\045\000\056\000\045\000\045\000\045\000\045\000\045\000\
    \045\000\045\000\045\000\045\000\045\000\045\000\045\000\045\000\
    \045\000\045\000\045\000\045\000\045\000\045\000\045\000\045\000\
    \045\000\045\000\045\000\045\000\045\000\046\000\255\255\255\255\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\255\255\061\000\255\255\255\255\255\255\056\000\
    \255\255\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\255\255\255\255\255\255\255\255\046\000\
    \061\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\047\000\255\255\255\255\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \255\255\255\255\255\255\255\255\255\255\061\000\255\255\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\255\255\255\255\255\255\255\255\047\000\255\255\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\048\000\053\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\048\000\053\000\056\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\048\000\053\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\061\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\048\000\
    \053\000";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec read lexbuf =
   __ocaml_lex_read_rec lexbuf 0
and __ocaml_lex_read_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 18 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( read lexbuf )
# 319 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 1 ->
# 19 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( next_line lexbuf; read lexbuf )
# 324 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 2 ->
# 20 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( NAT (int_of_string (L.lexeme lexbuf)) )
# 329 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 3 ->
# 21 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( read_string (Buffer.create 17) lexbuf )
# 334 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 4 ->
# 22 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( LEFT_PAREN )
# 339 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 5 ->
# 23 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( RIGHT_PAREN )
# 344 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 6 ->
# 24 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( read_regex (Buffer.create 17) lexbuf )
# 349 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 7 ->
# 25 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( LEFT_BRACE )
# 354 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 8 ->
# 26 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( RIGHT_BRACE )
# 359 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 9 ->
# 27 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( LEFT_BRACKET )
# 364 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 10 ->
# 28 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( RIGHT_BRACKET )
# 369 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 11 ->
# 29 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( LEFT_ANGLE )
# 374 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 12 ->
# 30 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( RIGHT_ANGLE )
# 379 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 13 ->
# 31 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( DOT )
# 384 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 14 ->
# 32 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( ASSIGN )
# 389 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 15 ->
# 33 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( COLON )
# 394 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 16 ->
# 34 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( DOLLAR )
# 399 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 17 ->
# 35 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( BAR )
# 404 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 18 ->
# 36 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( SEMICOLON )
# 409 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 19 ->
# 37 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( ARROW )
# 414 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 20 ->
# 38 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( UNDERSCORE )
# 419 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 21 ->
# 39 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( COMMA )
# 424 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 22 ->
# 40 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( LEFT_FIXITY )
# 429 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 23 ->
# 41 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( RIGHT_FIXITY )
# 434 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 24 ->
# 42 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( FORALL )
# 439 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 25 ->
# 43 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( TERMINAL_ID (L.lexeme lexbuf) )
# 444 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 26 ->
# 44 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( NONTERMINAL_ID (L.lexeme lexbuf) )
# 449 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 27 ->
# 45 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
                   ( EOF )
# 454 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 28 ->
# 46 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
      ( error lexbuf ("Unexpected char: " ^ L.lexeme lexbuf) )
# 459 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_rec lexbuf __ocaml_lex_state

and read_string buf lexbuf =
   __ocaml_lex_read_string_rec buf lexbuf 48
and __ocaml_lex_read_string_rec buf lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 50 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
              ( B.add_string buf @@ L.lexeme lexbuf
              ; read_string buf lexbuf
              )
# 473 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 1 ->
# 53 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
              ( B.add_string buf @@ L.lexeme lexbuf
              ; L.new_line lexbuf
              ; read_string buf lexbuf
              )
# 481 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 2 ->
# 57 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
              ( B.add_char buf '"'
              ; read_string buf lexbuf
              )
# 488 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 3 ->
# 60 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
              ( B.add_char buf '\\'
              ; read_string buf lexbuf
              )
# 495 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 4 ->
# 63 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
              ( STRING (B.contents buf) )
# 500 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 5 ->
# 64 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
              ( error lexbuf "end of input inside of a string" )
# 505 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 6 ->
# 65 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
              ( error lexbuf
                  "found '%s' in a string" @@ L.lexeme lexbuf )
# 511 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_string_rec buf lexbuf __ocaml_lex_state

and read_regex buf lexbuf =
   __ocaml_lex_read_regex_rec buf lexbuf 56
and __ocaml_lex_read_regex_rec buf lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 70 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
    ( B.add_string buf @@ L.lexeme lexbuf
    ; read_regex buf lexbuf
    )
# 525 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 1 ->
# 74 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
    ( B.add_char buf '\\'
    ; read_regex buf lexbuf
    )
# 532 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 2 ->
let
# 77 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
               c
# 538 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 78 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
    ( B.add_char buf '\\'
    ; B.add_char buf c
    ; read_regex buf lexbuf
    )
# 545 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 3 ->
# 82 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
        ( REGEX (B.contents buf) )
# 550 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 4 ->
# 83 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
        ( error lexbuf "end of input inside of a regex" )
# 555 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | 5 ->
# 84 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.mll"
        ( error lexbuf
          (Printf.sprintf "found '%s' in a regex"
            (L.lexeme lexbuf))
        )
# 563 "/Users/joel/code/lvca-bucklescript/src/ConcreteSyntax_Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_regex_rec buf lexbuf __ocaml_lex_state

;;

