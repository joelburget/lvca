// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var MenhirLib = require("./menhirLib.bs.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var $$Error = Caml_exceptions.create("StaticsParser.MenhirBasics.Error");

function token2terminal(_tok) {
  if (typeof _tok === "number") {
    switch (_tok) {
      case 0 : 
          return 1;
      case 1 : 
          return 2;
      case 2 : 
          return 3;
      case 3 : 
          return 5;
      case 4 : 
          return 6;
      case 5 : 
          return 8;
      case 6 : 
          return 9;
      case 7 : 
          return 10;
      case 8 : 
          return 11;
      case 9 : 
          return 12;
      case 10 : 
          return 13;
      
    }
  } else if (_tok.tag) {
    return 7;
  } else {
    return 4;
  }
}

function token2value(_tok) {
  if (typeof _tok === "number") {
    return /* () */0;
  } else {
    return _tok[0];
  }
}

var semantic_action = /* array */[
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = /* tm */match[/* semv */1];
      var _v_001 = /* ty */_menhir_stack[/* semv */1];
      var _v = /* record */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */Belt_MapString.empty,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v = Belt_MapString.fromArray(Belt_List.toArray(_menhir_stack[/* semv */1]));
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* tuple */[
        Belt_MapString.empty,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = /* tm */match[/* semv */1];
      var _v_001 = /* ty */_menhir_stack[/* semv */1];
      var _v = /* record */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_menhir_stack[/* semv */1],
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v_001 = match[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4];
      var _v_000 = /* hypotheses */match$1[/* semv */1];
      var _v_001 = /* name */match[/* semv */1];
      var _v_002 = /* conclusion */_menhir_stack[/* semv */1];
      var _v = /* record */[
        _v_000,
        _v_001,
        _v_002
      ];
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */match[/* semv */1],
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var _1 = List.rev(/* [] */0);
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* Scope */[
        _1,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _1 = List.rev(match[/* semv */1]);
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* Scope */[
        _1,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* Scope */[
        /* [] */0,
        _v_001
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4][/* next */4];
      var _v_000 = match$1[/* semv */1];
      var _v_001 = match[/* semv */1];
      var _v = /* Term */Block.__(0, [
          _v_000,
          _v_001
        ]);
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* Free */Block.__(2, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */match[/* semv */1],
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* tuple */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* InferenceRule */Block.__(0, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* CheckingRule */Block.__(1, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    })
];

var ET = MenhirLib.TableInterpreter[/* MakeEngineTable */0]([
      token2terminal,
      0,
      token2value,
      /* tuple */[
        8,
        "\0\0\0\0\0\0\0\0\0\x12\x14\r\0\0\x18\0\0\0\x13\0\x19\x1c\0\0\x16\x05\x01\0\x0b\0\0\x10\0\0\x06\0\0\x07\0\x03\x1d\x1e\0\t\0\x11\0\x02\0\x1b"
      ],
      /* tuple */[
        14,
        "\b\x90\0\xa0\x10\0\x01\x01\x01\xfa\xe2\x14\x19\x10\x01\0\0\0\0\0\0`\0\x05\0\0\0\x10\x01\x01\x91\0\0\b\0\0\0\0\0\x02\x80@\0\0\0\0\0\x02$\0\0 \0\x01\0\0\0 \x04\0\0\x04\x80\x01\0\0\0\x10\0\0\0\0\0\0\x81\0\0\0\x80\0\0\x10\0\0\0\x80\0\0"
      ],
      /* tuple */[
        /* tuple */[
          8,
          "\x10\x16\x03\x02\x16\x03\x1a\x03\x16\0\0\0.\x1a\0(0\x10\0<\0\0 \x03\0\0\0\x10\0:\x10\x000\x16\x000\x16\0\x16\0\0\0\x10\x006\0\x16\x008\0"
        ],
        /* tuple */[
          8,
          "eeee\x1ae\x0ee5eee\x1d\x1a\x12-%9\x16\x06\x1e\r\"\n6YQ\x92^B\x9aFRz\x86\xb7\xc7"
        ]
      ],
      /* tuple */[
        8,
        "\x01\0\x12\x11\x11\x10\x0f\x0e\x0e\r\r\f\f\x0b\x0b\n\t\b\b\b\x07\x07\x06\x06\x05\x05\x04\x03\x02\x02"
      ],
      /* tuple */[
        /* tuple */[
          8,
          "\x13\0\x03\0\x05\0\b\0\f\0\0\0\0\"\0\0\x10\0\0\0\0\0\0.\0\0\0\b\0\0\"\0\0,\0\0\x1c\0B\0\0\0\x1e\0\0\0>\0\0\0"
        ],
        /* tuple */[
          8,
          "\x1b\x1c\x17\x16-\x1e\x1a+!\x0b\f\n\r\x13\x1c\x10\x14\x1d\x1e&+!\x0b\x0f#\r\x17$\x10,\x19+! !01)(\0*"
        ]
      ],
      2,
      semantic_action,
      $$Error,
      undefined
    ]);

var TI = MenhirLib.Engine[/* Make */0]([
      ET[0],
      ET[1],
      ET[2],
      ET[3],
      ET[4],
      ET[6],
      ET[8],
      ET[9],
      ET[10],
      ET[13],
      ET[14],
      ET[15],
      ET[16],
      ET[11],
      ET[17],
      ET[18],
      ET[19],
      ET[20],
      ET[21]
    ]);

var start = TI[32];

var entry = TI[37];

function term_top(lexer, lexbuf) {
  return Curry._3(entry, 46, lexer, lexbuf);
}

function rules(lexer, lexbuf) {
  return Curry._3(entry, 0, lexer, lexbuf);
}

function term_top$1(initial_position) {
  return Curry._2(start, 46, initial_position);
}

function rules$1(initial_position) {
  return Curry._2(start, 0, initial_position);
}

var Incremental = /* module */[
  /* term_top */term_top$1,
  /* rules */rules$1
];

var MenhirInterpreter_000 = TI[33];

var MenhirInterpreter_001 = TI[34];

var MenhirInterpreter_002 = TI[35];

var MenhirInterpreter_003 = TI[36];

var MenhirInterpreter_004 = TI[38];

var MenhirInterpreter_005 = TI[39];

var MenhirInterpreter_006 = TI[40];

var MenhirInterpreter_007 = TI[41];

var MenhirInterpreter_008 = TI[0];

var MenhirInterpreter_009 = TI[6];

var MenhirInterpreter_010 = TI[7];

var MenhirInterpreter_011 = TI[42];

var MenhirInterpreter_012 = TI[43];

var MenhirInterpreter_013 = TI[52];

var MenhirInterpreter_014 = TI[53];

var MenhirInterpreter_015 = TI[45];

var MenhirInterpreter_016 = TI[44];

var MenhirInterpreter_017 = TI[46];

var MenhirInterpreter_018 = TI[48];

var MenhirInterpreter_019 = TI[47];

var MenhirInterpreter_020 = TI[49];

var MenhirInterpreter_021 = TI[50];

var MenhirInterpreter_022 = TI[51];

var MenhirInterpreter = [
  MenhirInterpreter_000,
  MenhirInterpreter_001,
  MenhirInterpreter_002,
  MenhirInterpreter_003,
  MenhirInterpreter_004,
  MenhirInterpreter_005,
  MenhirInterpreter_006,
  MenhirInterpreter_007,
  MenhirInterpreter_008,
  MenhirInterpreter_009,
  MenhirInterpreter_010,
  MenhirInterpreter_011,
  MenhirInterpreter_012,
  MenhirInterpreter_013,
  MenhirInterpreter_014,
  MenhirInterpreter_015,
  MenhirInterpreter_016,
  MenhirInterpreter_017,
  MenhirInterpreter_018,
  MenhirInterpreter_019,
  MenhirInterpreter_020,
  MenhirInterpreter_021,
  MenhirInterpreter_022
];

exports.$$Error = $$Error;
exports.term_top = term_top;
exports.rules = rules;
exports.MenhirInterpreter = MenhirInterpreter;
exports.Incremental = Incremental;
/* ET Not a pure module */
