language_def: ID ASSIGN BAR SEMICOLON
##
## Ends in an error in state: 4.
##
## sort_def -> ID ASSIGN option(BAR) . separated_nonempty_list(BAR,operator_def) [ ID EOF ]
##
## The known suffix of the stack is as follows:
## ID ASSIGN option(BAR)
##

Malformed sort declaration -- expected an operator, eg `add(arith; arith)`

language_def: ID ASSIGN ID LEFT_BRACK ID COMMA SEMICOLON
##
## Ends in an error in state: 33.
##
## separated_nonempty_list(COMMA,ID) -> ID COMMA . separated_nonempty_list(COMMA,ID) [ RIGHT_BRACK ]
##
## The known suffix of the stack is as follows:
## ID COMMA
##

Identifier expected when parsing a list of IDs.

language_def: ID ASSIGN ID LEFT_BRACK ID RIGHT_BRACK LEFT_PAREN SEMICOLON
##
## Ends in an error in state: 37.
##
## arity -> LEFT_BRACK separated_nonempty_list(COMMA,ID) RIGHT_BRACK LEFT_PAREN . valence_list RIGHT_PAREN [ ID EOF BAR ]
##
## The known suffix of the stack is as follows:
## LEFT_BRACK separated_nonempty_list(COMMA,ID) RIGHT_BRACK LEFT_PAREN
##

Expected a valence when parsing an arity.

language_def: ID ASSIGN ID LEFT_BRACK ID RIGHT_BRACK SEMICOLON
##
## Ends in an error in state: 36.
##
## arity -> LEFT_BRACK separated_nonempty_list(COMMA,ID) RIGHT_BRACK . LEFT_PAREN valence_list RIGHT_PAREN [ ID EOF BAR ]
##
## The known suffix of the stack is as follows:
## LEFT_BRACK separated_nonempty_list(COMMA,ID) RIGHT_BRACK
##

Expected a paren-enclosed list of valences when parsing an arity.

language_def: ID ASSIGN ID LEFT_BRACK ID SEMICOLON
##
## Ends in an error in state: 32.
##
## separated_nonempty_list(COMMA,ID) -> ID . [ RIGHT_BRACK ]
## separated_nonempty_list(COMMA,ID) -> ID . COMMA separated_nonempty_list(COMMA,ID) [ RIGHT_BRACK ]
##
## The known suffix of the stack is as follows:
## ID
##

Comma-separated list of identifiers (followed by a bracket) expected.

language_def: ID ASSIGN ID LEFT_BRACK SEMICOLON
##
## Ends in an error in state: 31.
##
## arity -> LEFT_BRACK . separated_nonempty_list(COMMA,ID) RIGHT_BRACK LEFT_PAREN valence_list RIGHT_PAREN [ ID EOF BAR ]
##
## The known suffix of the stack is as follows:
## LEFT_BRACK
##

Identifier expected or "]" expected.

language_def: ID ASSIGN ID LEFT_PAREN ID DOT SEMICOLON
##
## Ends in an error in state: 25.
##
## separated_nonempty_list(DOT,sort) -> sort DOT . separated_nonempty_list(DOT,sort) [ SEMICOLON RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## sort DOT
##

Unexpected ";" when parsing a list of sorts. Expected a sort or ")".

language_def: ID ASSIGN ID LEFT_PAREN ID ID LEFT_BRACK
##
## Ends in an error in state: 11.
##
## nonempty_list(atomic_sort) -> atomic_sort . [ SEMICOLON RIGHT_PAREN RIGHT_BRACK DOT ]
## nonempty_list(atomic_sort) -> atomic_sort . nonempty_list(atomic_sort) [ SEMICOLON RIGHT_PAREN RIGHT_BRACK DOT ]
##
## The known suffix of the stack is as follows:
## atomic_sort
##

Unexpected "[" when parsing a list of sorts. Expected ";" or a sort.

language_def: ID ASSIGN ID LEFT_PAREN ID ID RIGHT_BRACK
##
## Ends in an error in state: 24.
##
## separated_nonempty_list(DOT,sort) -> sort . [ SEMICOLON RIGHT_PAREN ]
## separated_nonempty_list(DOT,sort) -> sort . DOT separated_nonempty_list(DOT,sort) [ SEMICOLON RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## sort
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 11, spurious reduction of production nonempty_list(atomic_sort) -> atomic_sort
## In state 10, spurious reduction of production sort -> ID nonempty_list(atomic_sort)
##

Unexpected "[" when parsing a list of sorts.

language_def: ID ASSIGN ID LEFT_PAREN ID LEFT_BRACK ID RIGHT_BRACK RIGHT_BRACK
##
## Ends in an error in state: 22.
##
## separated_nonempty_list(SEMICOLON,valence) -> valence . [ RIGHT_PAREN ]
## separated_nonempty_list(SEMICOLON,valence) -> valence . SEMICOLON separated_nonempty_list(SEMICOLON,valence) [ RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## valence
##

Unexpected "]" when parsing a list of valences. Expected ")" or ";".

language_def: ID ASSIGN ID LEFT_PAREN ID LEFT_BRACK ID SEMICOLON
##
## Ends in an error in state: 18.
##
## valence -> ID LEFT_BRACK sort . RIGHT_BRACK [ SEMICOLON RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## ID LEFT_BRACK sort
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 8, spurious reduction of production atomic_sort -> ID
## In state 15, spurious reduction of production sort -> atomic_sort
##

Unexpected ";" when parsing a valence. Expected "[".

language_def: ID ASSIGN ID LEFT_PAREN ID LEFT_BRACK SEMICOLON
##
## Ends in an error in state: 17.
##
## valence -> ID LEFT_BRACK . sort RIGHT_BRACK [ SEMICOLON RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## ID LEFT_BRACK
##

Sort expected (got ";") when parsing a valence.

language_def: ID ASSIGN ID LEFT_PAREN ID RIGHT_BRACK
##
## Ends in an error in state: 16.
##
## atomic_sort -> ID . [ SEMICOLON RIGHT_PAREN DOT ]
## sort -> ID . nonempty_list(atomic_sort) [ SEMICOLON RIGHT_PAREN DOT ]
## valence -> ID . LEFT_BRACK sort RIGHT_BRACK [ SEMICOLON RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## ID
##

Unexpected "]".

language_def: ID ASSIGN ID LEFT_PAREN ID SEMICOLON SEMICOLON
##
## Ends in an error in state: 23.
##
## separated_nonempty_list(SEMICOLON,valence) -> valence SEMICOLON . separated_nonempty_list(SEMICOLON,valence) [ RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## valence SEMICOLON
##

Unexpected ";" when parsing a list of valences. Expected ")" or a valence.

language_def: ID ASSIGN ID LEFT_PAREN LEFT_PAREN ID LEFT_BRACK
##
## Ends in an error in state: 8.
##
## atomic_sort -> ID . [ SEMICOLON RIGHT_PAREN RIGHT_BRACK DOT ]
## sort -> ID . nonempty_list(atomic_sort) [ SEMICOLON RIGHT_PAREN RIGHT_BRACK DOT ]
##
## The known suffix of the stack is as follows:
## ID
##

Unexpected "[" when parsing a sort.

language_def: ID ASSIGN ID LEFT_PAREN LEFT_PAREN ID SEMICOLON
##
## Ends in an error in state: 13.
##
## atomic_sort -> LEFT_PAREN sort . RIGHT_PAREN [ SEMICOLON RIGHT_PAREN RIGHT_BRACK LEFT_PAREN ID DOT ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN sort
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 8, spurious reduction of production atomic_sort -> ID
## In state 15, spurious reduction of production sort -> atomic_sort
##

Unexpected ";" when parsing a sort. Expected ")".

language_def: ID ASSIGN ID LEFT_PAREN LEFT_PAREN SEMICOLON
##
## Ends in an error in state: 7.
##
## atomic_sort -> LEFT_PAREN . sort RIGHT_PAREN [ SEMICOLON RIGHT_PAREN RIGHT_BRACK LEFT_PAREN ID DOT ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN
##

Unexpected ";" when parsing a sort.

language_def: ID ASSIGN ID LEFT_PAREN RIGHT_PAREN BAR SEMICOLON
##
## Ends in an error in state: 43.
##
## separated_nonempty_list(BAR,operator_def) -> operator_def BAR . separated_nonempty_list(BAR,operator_def) [ ID EOF ]
##
## The known suffix of the stack is as follows:
## operator_def BAR
##

Unexpected ";" when parsing a list of operator definitions. Expected an operator definition.

language_def: ID ASSIGN ID LEFT_PAREN RIGHT_PAREN SEMICOLON
##
## Ends in an error in state: 42.
##
## separated_nonempty_list(BAR,operator_def) -> operator_def . [ ID EOF ]
## separated_nonempty_list(BAR,operator_def) -> operator_def . BAR separated_nonempty_list(BAR,operator_def) [ ID EOF ]
##
## The known suffix of the stack is as follows:
## operator_def
##

Unexpected ";" when parsing a list of operator definitions. Expected an identifier or "|".

language_def: ID ASSIGN ID LEFT_PAREN SEMICOLON
##
## Ends in an error in state: 6.
##
## arity -> LEFT_PAREN . valence_list RIGHT_PAREN [ ID EOF BAR ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN
##

Unexpected ";" when parsing an arity. Expected a list of valences.

language_def: ID ASSIGN ID SEMICOLON
##
## Ends in an error in state: 5.
##
## operator_def -> ID . arity [ ID EOF BAR ]
##
## The known suffix of the stack is as follows:
## ID
##

Unexpected ";" when parsing an operator definition. Expected an arity.

language_def: ID ASSIGN SEMICOLON
##
## Ends in an error in state: 2.
##
## sort_def -> ID ASSIGN . option(BAR) separated_nonempty_list(BAR,operator_def) [ ID EOF ]
##
## The known suffix of the stack is as follows:
## ID ASSIGN
##

Unexpected ";" when parsing a sort definition. Expected an operator definition or "|".

language_def: ID SEMICOLON
##
## Ends in an error in state: 1.
##
## sort_def -> ID . ASSIGN option(BAR) separated_nonempty_list(BAR,operator_def) [ ID EOF ]
##
## The known suffix of the stack is as follows:
## ID
##

Unexpected ";". Expected ":=".

language_def: SEMICOLON
##
## Ends in an error in state: 0.
##
## language_def' -> . language_def [ # ]
##
## The known suffix of the stack is as follows:
##
##

Unexpected ";". Expected a set of sort definitions.

