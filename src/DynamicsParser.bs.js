// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var MenhirLib = require("./menhirLib.bs.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Belt_SetString = require("bs-platform/lib/js/belt_SetString.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var $$Error = Caml_exceptions.create("DynamicsParser.MenhirBasics.Error");

function vars_of_pattern(param) {
  switch (param.tag | 0) {
    case 0 : 
        return Belt_List.flatten(List.map(vars_of_binding_pattern, param[1]));
    case 1 : 
        var v = param[0];
        if (v === "_") {
          return /* [] */0;
        } else {
          return /* :: */[
                  v,
                  /* [] */0
                ];
        }
    case 2 : 
        return Belt_List.flatten(List.map(vars_of_pattern, param[0]));
    case 3 : 
        return /* [] */0;
    
  }
}

function vars_of_binding_pattern(param) {
  return Pervasives.$at(param[0], vars_of_pattern(param[1]));
}

function go(vars, tm) {
  switch (tm.tag | 0) {
    case 0 : 
        return /* Operator */Block.__(0, [
                  tm[0],
                  List.map((function (param) {
                          return go_scope(vars, param);
                        }), tm[1])
                ]);
    case 1 : 
        var s = tm[0];
        if (Belt_SetString.has(vars, s)) {
          return tm;
        } else {
          return /* Metavar */Block.__(7, [s]);
        }
    case 2 : 
        return /* Sequence */Block.__(2, [List.map((function (param) {
                          return go(vars, param);
                        }), tm[0])]);
    case 4 : 
        return /* Lambda */Block.__(4, [
                  tm[0],
                  go_scope(vars, tm[1])
                ]);
    case 5 : 
        return /* CoreApp */Block.__(5, [
                  go(vars, tm[0]),
                  List.map((function (param) {
                          return go(vars, param);
                        }), tm[1])
                ]);
    case 6 : 
        return /* Case */Block.__(6, [
                  go(vars, tm[0]),
                  List.map((function (param) {
                          return /* tuple */[
                                  param[0],
                                  go_scope(vars, param[1])
                                ];
                        }), tm[1])
                ]);
    default:
      return tm;
  }
}

function go_scope(vars, param) {
  var binders = param[0];
  return /* CoreScope */[
          binders,
          go(Belt_SetString.union(vars, Belt_SetString.fromArray(Belt_List.toArray(binders))), param[1])
        ];
}

function token2terminal(_tok) {
  if (typeof _tok === "number") {
    switch (_tok) {
      case 0 : 
          return 2;
      case 1 : 
          return 3;
      case 2 : 
          return 4;
      case 3 : 
          return 5;
      case 4 : 
          return 6;
      case 5 : 
          return 7;
      case 6 : 
          return 8;
      case 7 : 
          return 9;
      case 8 : 
          return 10;
      case 9 : 
          return 11;
      case 10 : 
          return 14;
      case 11 : 
          return 15;
      case 12 : 
          return 16;
      case 13 : 
          return 17;
      case 14 : 
          return 18;
      case 15 : 
          return 19;
      case 16 : 
          return 20;
      case 17 : 
          return 21;
      case 18 : 
          return 22;
      case 19 : 
          return 23;
      
    }
  } else {
    switch (_tok.tag | 0) {
      case 0 : 
          return 1;
      case 1 : 
          return 12;
      case 2 : 
          return 13;
      
    }
  }
}

function token2value(_tok) {
  if (typeof _tok === "number") {
    return /* () */0;
  } else {
    return _tok[0];
  }
}

var semantic_action = /* array */[
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _1 = match[/* semv */1];
      var _v_001 = /* CoreScope */[
        vars_of_pattern(_1),
        _menhir_stack[/* semv */1]
      ];
      var _v = /* tuple */[
        _1,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = go(Belt_SetString.empty, _menhir_stack[/* semv */1]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var _1 = List.rev(/* [] */0);
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* CoreBindingPat */[
        _1,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _1 = List.rev(match[/* semv */1]);
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* CoreBindingPat */[
        _1,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* CoreBindingPat */[
        /* [] */0,
        _v_001
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4][/* next */4];
      var _v_000 = match$1[/* semv */1];
      var _v_001 = match[/* semv */1];
      var _v = /* PatternTerm */Block.__(0, [
          _v_000,
          _v_001
        ]);
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* PatternVar */Block.__(1, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4];
      var _v = /* PatternSequence */Block.__(2, [match[/* semv */1]]);
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* PatternPrim */Block.__(3, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var _1 = List.rev(/* [] */0);
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* CoreScope */[
        _1,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _1 = List.rev(match[/* semv */1]);
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* CoreScope */[
        _1,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* CoreScope */[
        /* [] */0,
        _v_001
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var _v = /* DenotationChart */[match[/* semv */1]];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4][/* next */4];
      var match$1 = match[/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* tuple */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_menhir_stack[/* semv */1],
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_menhir_stack[/* semv */1],
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_menhir_stack[/* semv */1],
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_menhir_stack[/* semv */1],
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_menhir_stack[/* semv */1],
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_menhir_stack[/* semv */1],
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv : [] */0,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_menhir_stack[/* semv */1],
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _menhir_s = _menhir_env[/* current */3];
      var _startpos = _menhir_stack[/* endp */3];
      return /* record */[
              /* state */_menhir_s,
              /* semv */undefined,
              /* startp */_startpos,
              /* endp */_startpos,
              /* next */_menhir_stack
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = _menhir_stack[/* semv */1];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4][/* next */4];
      var _v_000 = match$1[/* semv */1];
      var _v_001 = match[/* semv */1];
      var _v = /* DPatternTm */Block.__(0, [
          _v_000,
          _v_001
        ]);
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* DVar */Block.__(1, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* PrimInteger */Block.__(0, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* PrimString */Block.__(1, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4][/* next */4];
      var match$2 = match$1[/* next */4][/* next */4];
      var _v_000 = match$1[/* semv */1];
      var _v_001 = match[/* semv */1];
      var _v = /* CoreApp */Block.__(5, [
          _v_000,
          _v_001
        ]);
      return /* record */[
              /* state */match$2[/* state */0],
              /* semv */_v,
              /* startp */match$2[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$2[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4][/* next */4];
      var _v_000 = match$1[/* semv */1];
      var _v_001 = match[/* semv */1];
      var _v = /* Operator */Block.__(0, [
          _v_000,
          _v_001
        ]);
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* Primitive */Block.__(3, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var match$1 = match[/* next */4];
      var match$2 = Belt_List.unzip(match[/* semv */1]);
      var _v_000 = match$2[1];
      var _v_001 = /* CoreScope */[
        match$2[0],
        _menhir_stack[/* semv */1]
      ];
      var _v = /* Lambda */Block.__(4, [
          _v_000,
          _v_001
        ]);
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v = /* Var */Block.__(1, [_menhir_stack[/* semv */1]]);
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4][/* next */4][/* next */4][/* next */4];
      var match$2 = match$1[/* next */4];
      var _v_000 = match$1[/* semv */1];
      var _v_001 = match[/* semv */1];
      var _v = /* Case */Block.__(6, [
          _v_000,
          _v_001
        ]);
      return /* record */[
              /* state */match$2[/* state */0],
              /* semv */_v,
              /* startp */match$2[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$2[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4];
      var _v = /* Meaning */Block.__(8, [match[/* semv */1]]);
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v_001 = match[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var _1 = List.rev(/* [] */0);
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* DenotationScopePat */[
        _1,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _1 = List.rev(match[/* semv */1]);
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* DenotationScopePat */[
        _1,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* DenotationScopePat */[
        /* [] */0,
        _v_001
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var _v_000 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        /* [] */0
      ];
      return /* record */[
              /* state */_menhir_stack[/* state */0],
              /* semv */_v,
              /* startp */_menhir_stack[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */_menhir_stack[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4][/* next */4];
      var _v_000 = match[/* semv */1];
      var _v_001 = _menhir_stack[/* semv */1];
      var _v = /* :: */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match[/* state */0],
              /* semv */_v,
              /* startp */match[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4][/* next */4];
      var _v_000 = match$1[/* semv */1];
      var _v_001 = Belt_List.toArray(match[/* semv */1]);
      var _v = /* SortAp */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match$1[/* state */0],
              /* semv */_v,
              /* startp */match$1[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$1[/* next */4]
            ];
    }),
  (function (_menhir_env) {
      var _menhir_stack = _menhir_env[/* stack */2];
      var match = _menhir_stack[/* next */4];
      var match$1 = match[/* next */4][/* next */4];
      var match$2 = match$1[/* next */4];
      var _v_000 = match$1[/* semv */1];
      var _v_001 = match[/* semv */1];
      var _v = /* tuple */[
        _v_000,
        _v_001
      ];
      return /* record */[
              /* state */match$2[/* state */0],
              /* semv */_v,
              /* startp */match$2[/* startp */2],
              /* endp */_menhir_stack[/* endp */3],
              /* next */match$2[/* next */4]
            ];
    })
];

var ET = MenhirLib.TableInterpreter[/* MakeEngineTable */0]([
      token2terminal,
      0,
      token2value,
      /* tuple */[
        8,
        "\0\0\0\0\0\x001\x1f\0\0?\0\0\x0023\0$\0\0\0'\0\0.&\0\0\0\0\0\0\0\0\0\0\0\0\0A!\0B\0C\0\x13\0\0\0\0\0\0\x1d\0\0=*\0(+\0\0\0#\0\0\0\0\0\0\n\x04\x19\0\0\0\x05\0\x07\x06\0\x009\x17\0\t\0\x007\x15\0-\0\0\x02\0\x005\x0b\x1b\0\0\0\f\r\0)\0\0;\x03\x0f\0\x0e\0\x11\x01"
      ],
      /* tuple */[
        24,
        "\0A\0\0\x04\x008\x80\0\x10\x04\x800\x80\x80\0\x04\0\0\0\0\0\0\x000\0\0\0\x04\x80\0\0\0\0\0\x80\0\x04\x000\x80\x80\0\0\0\0\0\0\x10\0\0\0\0\0\b\0\0\0\x02\0@L\x15\0\0\0\0\x04\0\b\0\0\0\0\0\0\0\x003\xc1\bPL\x950\x80\x80@L\x15@L\x15\0\x80\x02\0\x04\0\0\0 \0\x04\0\0\x80\0\x10\x04\x000\0\0\0\x04\0\0\0\0\0\0\0\x10\0\0\0\0\0\x10\0\0\0\0\0\0\x80\x02\0\0\0\0\0\x02@L\x15\0\x80\0@L\x15 \0\0PL\x15\0\0\x000\0\0@L\x15\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\0\x01\0\0\0\x10\0B,\b\0\0\0B,\0D,\x004\x80BP,\x800\x80\x80@,\0\0\0\0\0\0\0\0\0\0\0\0\x80@,\x000\x80\x80\0\0\0\x10\0\0\0\0\0\0\0\x000\0\0@,\x80\0\0\0\0\0\0\x04\0\0\0\0\0\x04\0@@,\0\0\0\0\0\0\0\x02\0\0\0\0\0\0\0\x02@L\x15\0\0\0\x02\0\b@,\0\0\0\0\0\0\0\0\0\0\0\0\x80@L\x150\x80\x80\0\0\0\0\0\0\x10\0\0\0\0\x000\0\0@L\x95\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0A\0\0\0\0\0\0\0"
      ],
      /* tuple */[
        /* tuple */[
          16,
          "\0\x11\0\x0f\0\xa8\0\xde\0\xa2\0\x0f\0\0\0\0\0\x02\0&\0\0\0\x06\0\x10\0\xa8\0\0\0\0\0J\0\0\0`\0|\x002\0\0\0\xaa\0\xf8\0\0\0\0\0*\0\x03\0\xb0\x002\x002\0\xae\0\xea\0\xe2\0\x82\0\xf8\0\x82\0\xe6\0\x82\0\0\0\0\x01\x04\0\0\x01\x06\0\0\0\xae\0\0\0\xe2\x002\x01\0\x002\x01\x0e\0<\0\0\0\xec\x002\0\0\0\0\x01\x0e\0\0\0\0\x01\b\x01\x02\0X\0\0\0\b\0\b\0t\0\x8a\0\xb6\0\b\0\0\0\0\0\0\0\xfa\0\xc8\0\xc8\0\0\x01\x16\0\0\0\0\0\xf0\0z\0\0\0\0\x01\x14\0\0\0\x10\0\b\0\0\0\0\x01\x14\0\0\0\xf6\x002\0\0\0\xda\0\b\0\0\0\0\0\0\x01\x04\0\\\0\xce\0\0\0\0\x01 \0\0\0\xf6\0\x03\0\0\0\0\0\0\x01\n\0\0\0\x11\0\0\0\0"
        ],
        /* tuple */[
          16,
          "\0V\0\x06\0e\0&\0\xf5\0V\0\n\0=\0Z\0U\0M\0f\0r\0\xd5\x01\n\0v\0f\x01\x0e\0z\x002\0~\x006\0\xc6\0\xad\0\xad\x01b\0V\0\xad\0\xad\0n\0\xad\0V\0\x12\0m\0Z\0\x16\0\xad\0f\0j\0Z\0F\0\xad\0f\0j\0z\0\x85\0~\0V\0\xc6\0z\0\x85\0~\0N\0\xc6\0\x85\0Z\0\x85\0\x85\0f\x01\x9e\0\x1d\0\x1d\0V\0\x1d\x01\x02\0z\x01\x12\0~\0}\0\xc6\0V\x01\n\0]\0f\x01\x16\0\x1d\0R\x01\x1a\0\x8e\x01\n\0\x1d\0f\x01\x16\0\x91\0\x91\x01\x1a\0\x91\0\x91\0\x91\0\x0e\0\xad\0\xad\0\x0e\0\x1d\0\x1d\0\x82\0n\0\xb9\0^\x01\x12\0\xbd\0V\0\x1d\0\x1d\0\xb9\0\xad\0\xad\0\xb9\x01\x12\0E\x01\n\0n\0f\x012\0u\0\xcd\0\xbd\0\x9a\0\xfd\0\xbd\0\xde\0\xed\x01J\0\xdd\0\x12\x01\xb6\0\xe5\0\x16\0b\x01\x86\0\x86\0\x8a\0\x92\0\xaa\0\xb2\0\xc2\0\xca\0\xd2\0\xee\0\xfa\0\xfe\x01.\x01>\x01Z\x01r\x01z\x01\x9a\x01\xae\x01\xcb"
        ]
      ],
      /* tuple */[
        8,
        "\0\x1f\x1e\x1d\x1d\x1d\x1c\x1c\x1c\x1c\x1b\x1b\x1b\x1a\x19\x18\x18\x17\x17\x16\x16\x15\x15\x14\x14\x13\x13\x12\x12\x11\x11\x10\x10\x0f\x0f\x0e\x0e\r\r\f\f\f\f\f\f\f\x0b\x0b\n\n\n\t\t\b\b\x07\x07\x06\x06\x05\x05\x04\x04\x03\x03\x02\x01"
      ],
      /* tuple */[
        /* tuple */[
          8,
          "/\f\0\n\0\x12\0\0\0<\0\0\"\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\r\0dh`\0\0\xa0\0l\0\x8e\0\0\0\0\0\0l\0\0~\0\x84\0<\0\0\\\0\0\0\0\0\0\0\x96\0\nN\0\x07\0n\0\0\0\0\x86\0\0\0\0\0\0\"\0\0\0\0\0j\0\0\0\0\0\x90\0\0R\0\0\0\0\x94\0\0\0\0\0\x004\0\0\0\0\0\x80\0\0"
        ],
        /* tuple */[
          8,
          "ertvJfj:K\bHp:k[\t\fOH\x10\x13m\x11\x07TQR\\KqH\x0fo^\x0b6afj:\t\f7:\x10QRU;.c9HmH.&)7:VZd:>:HXH^*0a&(=:/4:HX,I`:i:utB\0\0\0\0N"
        ]
      ],
      1,
      semantic_action,
      $$Error,
      undefined
    ]);

var TI = MenhirLib.Engine[/* Make */0]([
      ET[0],
      ET[1],
      ET[2],
      ET[3],
      ET[4],
      ET[6],
      ET[8],
      ET[9],
      ET[10],
      ET[13],
      ET[14],
      ET[15],
      ET[16],
      ET[11],
      ET[17],
      ET[18],
      ET[19],
      ET[20],
      ET[21]
    ]);

var start = TI[32];

var entry = TI[37];

function dynamics(lexer, lexbuf) {
  return Curry._3(entry, 0, lexer, lexbuf);
}

function dynamics$1(initial_position) {
  return Curry._2(start, 0, initial_position);
}

var Incremental = /* module */[/* dynamics */dynamics$1];

var MenhirInterpreter_000 = TI[33];

var MenhirInterpreter_001 = TI[34];

var MenhirInterpreter_002 = TI[35];

var MenhirInterpreter_003 = TI[36];

var MenhirInterpreter_004 = TI[38];

var MenhirInterpreter_005 = TI[39];

var MenhirInterpreter_006 = TI[40];

var MenhirInterpreter_007 = TI[41];

var MenhirInterpreter_008 = TI[0];

var MenhirInterpreter_009 = TI[6];

var MenhirInterpreter_010 = TI[7];

var MenhirInterpreter_011 = TI[42];

var MenhirInterpreter_012 = TI[43];

var MenhirInterpreter_013 = TI[52];

var MenhirInterpreter_014 = TI[53];

var MenhirInterpreter_015 = TI[45];

var MenhirInterpreter_016 = TI[44];

var MenhirInterpreter_017 = TI[46];

var MenhirInterpreter_018 = TI[48];

var MenhirInterpreter_019 = TI[47];

var MenhirInterpreter_020 = TI[49];

var MenhirInterpreter_021 = TI[50];

var MenhirInterpreter_022 = TI[51];

var MenhirInterpreter = [
  MenhirInterpreter_000,
  MenhirInterpreter_001,
  MenhirInterpreter_002,
  MenhirInterpreter_003,
  MenhirInterpreter_004,
  MenhirInterpreter_005,
  MenhirInterpreter_006,
  MenhirInterpreter_007,
  MenhirInterpreter_008,
  MenhirInterpreter_009,
  MenhirInterpreter_010,
  MenhirInterpreter_011,
  MenhirInterpreter_012,
  MenhirInterpreter_013,
  MenhirInterpreter_014,
  MenhirInterpreter_015,
  MenhirInterpreter_016,
  MenhirInterpreter_017,
  MenhirInterpreter_018,
  MenhirInterpreter_019,
  MenhirInterpreter_020,
  MenhirInterpreter_021,
  MenhirInterpreter_022
];

exports.$$Error = $$Error;
exports.dynamics = dynamics;
exports.MenhirInterpreter = MenhirInterpreter;
exports.Incremental = Incremental;
/* ET Not a pure module */
