# 1 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
 
open Dynamics_Parser
open LexerUtil

module L = Lexing
module B = Buffer

# 10 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\239\255\241\255\088\000\163\000\192\000\244\255\245\255\
    \246\255\247\255\248\255\249\255\250\255\001\000\001\000\005\000\
    \007\000\011\000\115\000\255\255\001\000\254\255\253\255\024\001\
    \137\001\250\255\251\255\002\000\254\255\138\001\253\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\013\000\012\000\013\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\004\000\003\000\000\000\
    \000\000\016\000\255\255\255\255\000\000\255\255\255\255\012\000\
    \255\255\255\255\255\255\003\000\255\255\000\000\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\018\000\000\000\255\255\000\000\000\000\255\255\
    \029\000\000\000\000\000\255\255\000\000\029\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\015\000\015\000\019\000\000\000\016\000\015\000\015\000\
    \015\000\015\000\015\000\000\000\015\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \015\000\000\000\010\000\003\000\030\000\015\000\000\000\015\000\
    \012\000\011\000\000\000\000\000\007\000\005\000\006\000\017\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\018\000\008\000\000\000\009\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\014\000\021\000\013\000\022\000\003\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\019\000\000\000\003\000\
    \020\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\003\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\000\000\000\000\000\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\003\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\255\255\000\000\000\000\000\000\003\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\028\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\026\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\027\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\025\000\255\255";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\020\000\255\255\000\000\015\000\015\000\
    \016\000\016\000\015\000\255\255\016\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\000\000\027\000\015\000\255\255\016\000\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\017\000\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\014\000\000\000\013\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\255\255\018\000\255\255\003\000\
    \018\000\255\255\255\255\255\255\255\255\003\000\255\255\255\255\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\255\255\255\255\255\255\255\255\003\000\
    \255\255\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\005\000\255\255\255\255\255\255\005\000\
    \255\255\255\255\255\255\255\255\255\255\005\000\255\255\255\255\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\255\255\255\255\255\255\255\255\005\000\
    \255\255\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\023\000\255\255\255\255\255\255\023\000\
    \255\255\255\255\255\255\255\255\255\255\023\000\255\255\255\255\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\018\000\255\255\255\255\255\255\023\000\
    \255\255\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\024\000\029\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\024\000\029\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\024\000\029\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\024\000\029\000";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec read lexbuf =
   __ocaml_lex_read_rec lexbuf 0
and __ocaml_lex_read_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 16 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( read lexbuf )
# 214 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 1 ->
# 17 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( LEFT_OXFORD )
# 219 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 2 ->
# 18 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( RIGHT_OXFORD )
# 224 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 3 ->
# 19 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( LEFT_BRACKET )
# 229 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 4 ->
# 20 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( RIGHT_BRACKET )
# 234 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 5 ->
# 21 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( LEFT_PAREN )
# 239 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 6 ->
# 22 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( RIGHT_PAREN )
# 244 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 7 ->
# 23 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( read_string (Buffer.create 17) lexbuf )
# 249 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 8 ->
# 24 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( EQ )
# 254 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 9 ->
# 25 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( SEMICOLON )
# 259 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 10 ->
# 26 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( COMMA )
# 264 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 11 ->
# 27 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( DOT )
# 269 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 12 ->
# 28 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( INT (Bigint.of_string (L.lexeme lexbuf)) )
# 274 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 13 ->
# 29 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( ID (Lexing.lexeme lexbuf) )
# 279 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 14 ->
# 30 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( EOF )
# 284 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 15 ->
# 31 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( next_line lexbuf; read lexbuf )
# 289 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 16 ->
# 32 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
      ( error lexbuf ("Unexpected char: " ^ Lexing.lexeme lexbuf) )
# 294 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_rec lexbuf __ocaml_lex_state

and read_string buf lexbuf =
   __ocaml_lex_read_string_rec buf lexbuf 24
and __ocaml_lex_read_string_rec buf lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 37 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( B.add_string buf @@ L.lexeme lexbuf
              ; read_string buf lexbuf
              )
# 308 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 1 ->
# 40 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( B.add_string buf @@ L.lexeme lexbuf
              ; L.new_line lexbuf
              ; read_string buf lexbuf
              )
# 316 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 2 ->
# 44 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( B.add_char buf '"'
              ; read_string buf lexbuf
              )
# 323 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 3 ->
# 47 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( B.add_char buf '\\'
              ; read_string buf lexbuf
              )
# 330 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 4 ->
# 50 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( STRING (B.contents buf) )
# 335 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 5 ->
# 51 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( error lexbuf "end of input inside of a string" )
# 340 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | 6 ->
# 52 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.mll"
              ( error lexbuf
                  "found '%s' - don't know how to handle" @@ L.lexeme lexbuf )
# 346 "/home/joel/code/lvca-bucklescript/src/Dynamics_Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_string_rec buf lexbuf __ocaml_lex_state

;;

