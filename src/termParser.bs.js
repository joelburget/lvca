// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Parsing = require("bs-platform/lib/js/parsing.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

var yytransl_const = /* array */[
  261,
  262,
  263,
  264,
  265,
  266,
  267,
  268,
  269,
  0,
  0
];

var yytransl_block = /* array */[
  257,
  258,
  259,
  260,
  0
];

var yyact = /* array */[
  (function (param) {
      return Pervasives.failwith("parser");
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 2);
      return /* Term */Block.__(0, [
                _1,
                /* [] */0
              ]);
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 3);
      var _3 = Parsing.peek_val(__caml_parser_env, 1);
      return /* Term */Block.__(0, [
                _1,
                _3
              ]);
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 0);
      return /* Var */Block.__(1, [_1]);
    }),
  (function (__caml_parser_env) {
      var _2 = Parsing.peek_val(__caml_parser_env, 1);
      return /* Sequence */Block.__(2, [_2]);
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 0);
      return /* Primitive */Block.__(3, [_1]);
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 2);
      var _3 = Parsing.peek_val(__caml_parser_env, 0);
      return /* :: */[
              _1,
              _3
            ];
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 0);
      return /* :: */[
              _1,
              /* [] */0
            ];
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 2);
      var _3 = Parsing.peek_val(__caml_parser_env, 0);
      return /* Scope */[
              /* :: */[
                _1,
                _3[0]
              ],
              _3[1]
            ];
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 0);
      return /* Scope */[
              /* [] */0,
              _1
            ];
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 2);
      var _3 = Parsing.peek_val(__caml_parser_env, 0);
      return /* :: */[
              _1,
              _3
            ];
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 0);
      return /* :: */[
              _1,
              /* [] */0
            ];
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 0);
      return /* PrimInteger */Block.__(0, [_1]);
    }),
  (function (__caml_parser_env) {
      var _1 = Parsing.peek_val(__caml_parser_env, 0);
      return /* PrimString */Block.__(1, [_1]);
    }),
  (function (__caml_parser_env) {
      return /* PrimBool */Block.__(2, [true]);
    }),
  (function (__caml_parser_env) {
      return /* PrimBool */Block.__(2, [false]);
    }),
  (function (__caml_parser_env) {
      throw [
            Parsing.YYexit,
            Parsing.peek_val(__caml_parser_env, 0)
          ];
    })
];

var yytables = /* record */[
  /* actions */yyact,
  /* transl_const */yytransl_const,
  /* transl_block */yytransl_block,
  /* lhs */"\xff\xff\x01\0\x01\0\x01\0\x01\0\x01\0\x02\0\x02\0\x05\0\x05\0\x03\0\x03\0\x04\0\x04\0\x04\0\x04\0\0\0",
  /* len */"\x02\0\x03\0\x04\0\x01\0\x03\0\x01\0\x03\0\x01\0\x03\0\x01\0\x03\0\x01\0\x01\0\x01\0\x01\0\x01\0\x02\0",
  /* defred */"\0\0\0\0\0\0\f\0\0\0\r\0\x0e\0\x0f\0\0\0\x10\0\x05\0\0\0\0\0\0\0\0\0\x01\0\t\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\n\0\b\0\x06\0",
  /* dgoto */"\x02\0\x10\0\x11\0\r\0\n\0\x12\0",
  /* sindex */"\x03\0\r\xff\0\0\0\0\xfa\xfe\0\0\0\0\0\0\r\xff\0\0\0\0\x02\xff\x03\xff\n\xff\x05\xff\0\0\0\0\x17\xff\x12\xff\r\xff\0\0\x15\xff\0\0\x15\xff\0\0\0\0\0\0",
  /* rindex */"\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\xff\0\0\x11\xff\0\0\0\0\0\0\x19\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0",
  /* gindex */"\0\0\xff\xff\f\0\x11\0\0\0\x10\0",
  /* tablesize */269,
  /* table */"\t\0\x03\0\x0b\0\x03\0\x01\0\x0e\0\x05\0\f\0\x06\0\x07\0\x15\0\x0f\0\b\0\x0b\0\x03\0\x13\0\x04\0\x05\0\f\0\x06\0\x07\0\x14\0\x03\0\b\0\x0e\0\x05\0\x03\0\x06\0\x07\0\x03\0\x17\0\b\0\x16\0\x0b\0\x07\0\x1a\0\x18\0\xx03\0\x03\0",
  /* check */"\x01\0\0\0\b\x01\x01\x01\x01\0\x03\x01\x04\x01\b\0\x06\x01\x07\x01\x05\x01\t\x01\n\x01\b\x01\x01\x01\f\x01\x03\x01\x04\x01\x13\0\x06\x01\x07\x01\x0b\x01\x01\x01\n\x01\x03\x01\x04\x01\t\x01\x06\x01\x07\x01\f\x01\f\x01\n\x01\t\x01\x0b\x01\t\x01\x17\0\x13\0\x15\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x0b\x01\f\x01",
  /* error_function */Parsing.parse_error,
  /* names_const */"DOT\0TRUE\0FALSE\0LEFT_PAREN\0RIGHT_PAREN\0LEFT_BRACK\0RIGHT_BRACK\0SEMICOLON\0COMMA\0EOF\0",
  /* names_block */"INT\0FLOAT\0ID\0STRING\0"
];

function term(lexfun, lexbuf) {
  return Parsing.yyparse(yytables, 1, lexfun, lexbuf);
}

exports.term = term;
/* No side effect */
