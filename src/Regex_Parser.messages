regex__test: ESCAPED RIGHT_PAREN
##
## Ends in an error in state: 26.
##
## prec0_re -> prec0_re . BAR prec0_re [ EOF BAR ]
## regex -> prec0_re . [ EOF ]
##
## The known suffix of the stack is as follows:
## prec0_re
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 12, spurious reduction of production nonempty_list(prec2_re) -> prec2_re 
## In state 19, spurious reduction of production prec1_re -> nonempty_list(prec2_re) 
## In state 14, spurious reduction of production prec0_re -> prec1_re 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

regex__test: STAR
##
## Ends in an error in state: 22.
##
## regex__test' -> . regex__test [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

regex: ESCAPED BAR STAR
##
## Ends in an error in state: 17.
##
## prec0_re -> prec0_re BAR . prec0_re [ RIGHT_PAREN EOF BAR # ]
##
## The known suffix of the stack is as follows:
## prec0_re BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

regex: ESCAPED RIGHT_PAREN
##
## Ends in an error in state: 21.
##
## prec0_re -> prec0_re . BAR prec0_re [ BAR # ]
## regex -> prec0_re . [ # ]
##
## The known suffix of the stack is as follows:
## prec0_re
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 12, spurious reduction of production nonempty_list(prec2_re) -> prec2_re 
## In state 19, spurious reduction of production prec1_re -> nonempty_list(prec2_re) 
## In state 14, spurious reduction of production prec0_re -> prec1_re 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

regex: ESCAPED STAR
##
## Ends in an error in state: 12.
##
## nonempty_list(prec2_re) -> prec2_re . [ RIGHT_PAREN EOF BAR # ]
## nonempty_list(prec2_re) -> prec2_re . nonempty_list(prec2_re) [ RIGHT_PAREN EOF BAR # ]
##
## The known suffix of the stack is as follows:
## prec2_re
##

<YOUR SYNTAX ERROR MESSAGE HERE>

regex: LEFT_PAREN ESCAPED EOF
##
## Ends in an error in state: 15.
##
## prec0_re -> prec0_re . BAR prec0_re [ RIGHT_PAREN BAR ]
## prec3_re -> LEFT_PAREN prec0_re . RIGHT_PAREN [ STAR RIGHT_PAREN QUESTION PLUS LEFT_PAREN ESCAPED EOF DOT CHARS CHARACTER_SET CHARACTER_CLASS BAR # ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN prec0_re
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 12, spurious reduction of production nonempty_list(prec2_re) -> prec2_re 
## In state 19, spurious reduction of production prec1_re -> nonempty_list(prec2_re) 
## In state 14, spurious reduction of production prec0_re -> prec1_re 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

regex: LEFT_PAREN STAR
##
## Ends in an error in state: 1.
##
## prec3_re -> LEFT_PAREN . prec0_re RIGHT_PAREN [ STAR RIGHT_PAREN QUESTION PLUS LEFT_PAREN ESCAPED EOF DOT CHARS CHARACTER_SET CHARACTER_CLASS BAR # ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

regex: STAR
##
## Ends in an error in state: 0.
##
## regex' -> . regex [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

