terminal_rule__test: TERMINAL_ID ASSIGN REGEX UNDERSCORE
##
## Ends in an error in state: 98.
##
## terminal_rule__test -> terminal_rule . EOF [ # ]
##
## The known suffix of the stack is as follows:
## terminal_rule
##

<YOUR SYNTAX ERROR MESSAGE HERE 1>

terminal_rule__test: UNDERSCORE
##
## Ends in an error in state: 96.
##
## terminal_rule__test' -> . terminal_rule__test [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE 2>

operator_match__test: STRING
##
## Ends in an error in state: 92.
##
## operator_match__test' -> . operator_match__test [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE 3>

operator_match__test: UNDERSCORE EOF
##
## Ends in an error in state: 52.
##
## nonempty_list(nonterminal_token) -> nonterminal_token . [ LEFT_BRACE ]
## nonempty_list(nonterminal_token) -> nonterminal_token . nonempty_list(nonterminal_token) [ LEFT_BRACE ]
##
## The known suffix of the stack is as follows:
## nonterminal_token
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 31, spurious reduction of production option(NAT) ->
## In state 33, spurious reduction of production nonterminal_token -> UNDERSCORE option(NAT)
##

<YOUR SYNTAX ERROR MESSAGE HERE 4>

operator_match__test: UNDERSCORE LEFT_BRACE DOLLAR NAT RIGHT_BRACE UNDERSCORE
##
## Ends in an error in state: 94.
##
## operator_match__test -> operator_match . EOF [ # ]
##
## The known suffix of the stack is as follows:
## operator_match
##

<YOUR SYNTAX ERROR MESSAGE HERE 5>

operator_match__test: UNDERSCORE LEFT_BRACE DOLLAR NAT UNDERSCORE
##
## Ends in an error in state: 71.
##
## operator_match -> nonempty_list(nonterminal_token) LEFT_BRACE operator_match_pattern . RIGHT_BRACE [ NONTERMINAL_ID EOF BAR ]
##
## The known suffix of the stack is as follows:
## nonempty_list(nonterminal_token) LEFT_BRACE operator_match_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE 6>

operator_match__test: UNDERSCORE LEFT_BRACE DOLLAR UNDERSCORE
##
## Ends in an error in state: 58.
##
## capture_number -> DOLLAR . NAT [ SEMICOLON RIGHT_PAREN RIGHT_BRACE DOT ]
##
## The known suffix of the stack is as follows:
## DOLLAR
##

<YOUR SYNTAX ERROR MESSAGE HERE 7>

operator_match__test: UNDERSCORE LEFT_BRACE NONTERMINAL_ID LEFT_PAREN DOLLAR NAT DOT UNDERSCORE
##
## Ends in an error in state: 65.
##
## separated_nonempty_list(DOT,operator_match_pattern) -> operator_match_pattern DOT . separated_nonempty_list(DOT,operator_match_pattern) [ SEMICOLON RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## operator_match_pattern DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE 8>

operator_match__test: UNDERSCORE LEFT_BRACE NONTERMINAL_ID LEFT_PAREN DOLLAR NAT SEMICOLON UNDERSCORE
##
## Ends in an error in state: 61.
##
## separated_nonempty_list(SEMICOLON,term_scope_pattern) -> term_scope_pattern SEMICOLON . separated_nonempty_list(SEMICOLON,term_scope_pattern) [ RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## term_scope_pattern SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE 9>

operator_match__test: UNDERSCORE LEFT_BRACE NONTERMINAL_ID LEFT_PAREN DOLLAR NAT UNDERSCORE
##
## Ends in an error in state: 64.
##
## separated_nonempty_list(DOT,operator_match_pattern) -> operator_match_pattern . [ SEMICOLON RIGHT_PAREN ]
## separated_nonempty_list(DOT,operator_match_pattern) -> operator_match_pattern . DOT separated_nonempty_list(DOT,operator_match_pattern) [ SEMICOLON RIGHT_PAREN ]
##
## The known suffix of the stack is as follows:
## operator_match_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE 10>

operator_match__test: UNDERSCORE LEFT_BRACE NONTERMINAL_ID LEFT_PAREN UNDERSCORE
##
## Ends in an error in state: 57.
##
## operator_match_pattern -> NONTERMINAL_ID LEFT_PAREN . loption(separated_nonempty_list(SEMICOLON,term_scope_pattern)) RIGHT_PAREN [ SEMICOLON RIGHT_PAREN RIGHT_BRACE DOT ]
##
## The known suffix of the stack is as follows:
## NONTERMINAL_ID LEFT_PAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE 11>

operator_match__test: UNDERSCORE LEFT_BRACE NONTERMINAL_ID UNDERSCORE
##
## Ends in an error in state: 56.
##
## operator_match_pattern -> NONTERMINAL_ID . LEFT_PAREN loption(separated_nonempty_list(SEMICOLON,term_scope_pattern)) RIGHT_PAREN [ SEMICOLON RIGHT_PAREN RIGHT_BRACE DOT ]
##
## The known suffix of the stack is as follows:
## NONTERMINAL_ID
##

<YOUR SYNTAX ERROR MESSAGE HERE 12>

operator_match__test: UNDERSCORE LEFT_BRACE UNDERSCORE
##
## Ends in an error in state: 55.
##
## operator_match -> nonempty_list(nonterminal_token) LEFT_BRACE . operator_match_pattern RIGHT_BRACE [ NONTERMINAL_ID EOF BAR ]
##
## The known suffix of the stack is as follows:
## nonempty_list(nonterminal_token) LEFT_BRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE 13>

nonterminal_token__test: LEFT_BRACKET LEFT_ANGLE NONTERMINAL_ID NAT COMMA UNDERSCORE
##
## Ends in an error in state: 41.
##
## separated_nonempty_list(COMMA,NAT) -> NAT COMMA . separated_nonempty_list(COMMA,NAT) [ RIGHT_ANGLE ]
##
## The known suffix of the stack is as follows:
## NAT COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE 14>

nonterminal_token__test: LEFT_BRACKET LEFT_ANGLE NONTERMINAL_ID NAT UNDERSCORE
##
## Ends in an error in state: 40.
##
## separated_nonempty_list(COMMA,NAT) -> NAT . [ RIGHT_ANGLE ]
## separated_nonempty_list(COMMA,NAT) -> NAT . COMMA separated_nonempty_list(COMMA,NAT) [ RIGHT_ANGLE ]
##
## The known suffix of the stack is as follows:
## NAT
##

<YOUR SYNTAX ERROR MESSAGE HERE 15>

nonterminal_token__test: LEFT_BRACKET LEFT_ANGLE NONTERMINAL_ID UNDERSCORE
##
## Ends in an error in state: 39.
##
## box_formatting_options -> LEFT_ANGLE NONTERMINAL_ID . loption(separated_nonempty_list(COMMA,NAT)) RIGHT_ANGLE [ UNDERSCORE TERMINAL_ID RIGHT_BRACKET NONTERMINAL_ID LEFT_BRACKET LEFT_BRACE EOF ]
##
## The known suffix of the stack is as follows:
## LEFT_ANGLE NONTERMINAL_ID
##

<YOUR SYNTAX ERROR MESSAGE HERE 16>

nonterminal_token__test: LEFT_BRACKET LEFT_ANGLE UNDERSCORE
##
## Ends in an error in state: 38.
##
## box_formatting_options -> LEFT_ANGLE . NONTERMINAL_ID loption(separated_nonempty_list(COMMA,NAT)) RIGHT_ANGLE [ UNDERSCORE TERMINAL_ID RIGHT_BRACKET NONTERMINAL_ID LEFT_BRACKET LEFT_BRACE EOF ]
##
## The known suffix of the stack is as follows:
## LEFT_ANGLE
##

<YOUR SYNTAX ERROR MESSAGE HERE 17>

nonterminal_token__test: LEFT_BRACKET STRING
##
## Ends in an error in state: 37.
##
## nonterminal_token -> LEFT_BRACKET . option(box_formatting_options) [ UNDERSCORE TERMINAL_ID RIGHT_BRACKET NONTERMINAL_ID LEFT_BRACKET LEFT_BRACE EOF ]
##
## The known suffix of the stack is as follows:
## LEFT_BRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE 18>

nonterminal_token__test: STRING
##
## Ends in an error in state: 88.
##
## nonterminal_token__test' -> . nonterminal_token__test [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE 19>

nonterminal_token__test: UNDERSCORE STRING
##
## Ends in an error in state: 31.
##
## nonterminal_token -> UNDERSCORE . option(NAT) [ UNDERSCORE TERMINAL_ID RIGHT_BRACKET NONTERMINAL_ID LEFT_BRACKET LEFT_BRACE EOF ]
##
## The known suffix of the stack is as follows:
## UNDERSCORE
##

<YOUR SYNTAX ERROR MESSAGE HERE 20>

nonterminal_token__test: UNDERSCORE UNDERSCORE
##
## Ends in an error in state: 90.
##
## nonterminal_token__test -> nonterminal_token . EOF [ # ]
##
## The known suffix of the stack is as follows:
## nonterminal_token
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 31, spurious reduction of production option(NAT) ->
## In state 33, spurious reduction of production nonterminal_token -> UNDERSCORE option(NAT)
##

<YOUR SYNTAX ERROR MESSAGE HERE 21>

nonterminal_rule__test: NONTERMINAL_ID ASSIGN BAR STRING
##
## Ends in an error in state: 30.
##
## nonterminal_rule -> NONTERMINAL_ID option(args) ASSIGN option(BAR) . separated_nonempty_list(BAR,operator_match) [ NONTERMINAL_ID EOF ]
##
## The known suffix of the stack is as follows:
## NONTERMINAL_ID option(args) ASSIGN option(BAR)
##

<YOUR SYNTAX ERROR MESSAGE HERE 22>

nonterminal_rule__test: NONTERMINAL_ID ASSIGN STRING
##
## Ends in an error in state: 28.
##
## nonterminal_rule -> NONTERMINAL_ID option(args) ASSIGN . option(BAR) separated_nonempty_list(BAR,operator_match) [ NONTERMINAL_ID EOF ]
##
## The known suffix of the stack is as follows:
## NONTERMINAL_ID option(args) ASSIGN
##

<YOUR SYNTAX ERROR MESSAGE HERE 23>

nonterminal_rule__test: NONTERMINAL_ID ASSIGN UNDERSCORE LEFT_BRACE DOLLAR NAT RIGHT_BRACE BAR STRING
##
## Ends in an error in state: 50.
##
## separated_nonempty_list(BAR,operator_match) -> operator_match BAR . separated_nonempty_list(BAR,operator_match) [ NONTERMINAL_ID EOF ]
##
## The known suffix of the stack is as follows:
## operator_match BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE 24>

nonterminal_rule__test: NONTERMINAL_ID ASSIGN UNDERSCORE LEFT_BRACE DOLLAR NAT RIGHT_BRACE NONTERMINAL_ID
##
## Ends in an error in state: 86.
##
## nonterminal_rule__test -> nonterminal_rule . EOF [ # ]
##
## The known suffix of the stack is as follows:
## nonterminal_rule
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 49, spurious reduction of production separated_nonempty_list(BAR,operator_match) -> operator_match
## In state 48, spurious reduction of production nonterminal_rule -> NONTERMINAL_ID option(args) ASSIGN option(BAR) separated_nonempty_list(BAR,operator_match)
##

<YOUR SYNTAX ERROR MESSAGE HERE 25>

nonterminal_rule__test: NONTERMINAL_ID ASSIGN UNDERSCORE LEFT_BRACE DOLLAR NAT RIGHT_BRACE UNDERSCORE
##
## Ends in an error in state: 49.
##
## separated_nonempty_list(BAR,operator_match) -> operator_match . [ NONTERMINAL_ID EOF ]
## separated_nonempty_list(BAR,operator_match) -> operator_match . BAR separated_nonempty_list(BAR,operator_match) [ NONTERMINAL_ID EOF ]
##
## The known suffix of the stack is as follows:
## operator_match
##

<YOUR SYNTAX ERROR MESSAGE HERE 26>

nonterminal_rule__test: NONTERMINAL_ID COLON LEFT_PAREN NONTERMINAL_ID ASSIGN
##
## Ends in an error in state: 19.
##
## atomic_sort -> LEFT_PAREN sort . RIGHT_PAREN [ RIGHT_PAREN NONTERMINAL_ID LEFT_PAREN ASSIGN ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN sort
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production atomic_sort -> NONTERMINAL_ID
## In state 21, spurious reduction of production sort -> atomic_sort
##

<YOUR SYNTAX ERROR MESSAGE HERE 27>

nonterminal_rule__test: NONTERMINAL_ID COLON LEFT_PAREN UNDERSCORE
##
## Ends in an error in state: 18.
##
## atomic_sort -> LEFT_PAREN . sort RIGHT_PAREN [ RIGHT_PAREN NONTERMINAL_ID LEFT_PAREN ASSIGN ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE 28>

nonterminal_rule__test: NONTERMINAL_ID COLON NONTERMINAL_ID NONTERMINAL_ID UNDERSCORE
##
## Ends in an error in state: 23.
##
## nonempty_list(atomic_sort) -> atomic_sort . [ RIGHT_PAREN ASSIGN ]
## nonempty_list(atomic_sort) -> atomic_sort . nonempty_list(atomic_sort) [ RIGHT_PAREN ASSIGN ]
##
## The known suffix of the stack is as follows:
## atomic_sort
##

<YOUR SYNTAX ERROR MESSAGE HERE 29>

nonterminal_rule__test: NONTERMINAL_ID COLON NONTERMINAL_ID RIGHT_PAREN
##
## Ends in an error in state: 27.
##
## nonterminal_rule -> NONTERMINAL_ID option(args) . ASSIGN option(BAR) separated_nonempty_list(BAR,operator_match) [ NONTERMINAL_ID EOF ]
##
## The known suffix of the stack is as follows:
## NONTERMINAL_ID option(args)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production atomic_sort -> NONTERMINAL_ID
## In state 21, spurious reduction of production sort -> atomic_sort
## In state 75, spurious reduction of production args -> list(arg) COLON sort
## In state 76, spurious reduction of production option(args) -> args
##

<YOUR SYNTAX ERROR MESSAGE HERE 30>

nonterminal_rule__test: NONTERMINAL_ID COLON NONTERMINAL_ID UNDERSCORE
##
## Ends in an error in state: 16.
##
## atomic_sort -> NONTERMINAL_ID . [ RIGHT_PAREN ASSIGN ]
## sort -> NONTERMINAL_ID . nonempty_list(atomic_sort) [ RIGHT_PAREN ASSIGN ]
##
## The known suffix of the stack is as follows:
## NONTERMINAL_ID
##

<YOUR SYNTAX ERROR MESSAGE HERE 31>

nonterminal_rule__test: NONTERMINAL_ID COLON UNDERSCORE
##
## Ends in an error in state: 74.
##
## args -> list(arg) COLON . sort [ ASSIGN ]
##
## The known suffix of the stack is as follows:
## list(arg) COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE 32>

nonterminal_rule__test: NONTERMINAL_ID LEFT_PAREN NONTERMINAL_ID COLON NONTERMINAL_ID ASSIGN
##
## Ends in an error in state: 25.
##
## arg -> LEFT_PAREN NONTERMINAL_ID COLON sort . RIGHT_PAREN [ LEFT_PAREN COLON ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN NONTERMINAL_ID COLON sort
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production atomic_sort -> NONTERMINAL_ID
## In state 21, spurious reduction of production sort -> atomic_sort
##

<YOUR SYNTAX ERROR MESSAGE HERE 33>

nonterminal_rule__test: NONTERMINAL_ID LEFT_PAREN NONTERMINAL_ID COLON NONTERMINAL_ID RIGHT_PAREN UNDERSCORE
##
## Ends in an error in state: 77.
##
## list(arg) -> arg . list(arg) [ COLON ]
##
## The known suffix of the stack is as follows:
## arg
##

<YOUR SYNTAX ERROR MESSAGE HERE 34>

nonterminal_rule__test: NONTERMINAL_ID LEFT_PAREN NONTERMINAL_ID COLON UNDERSCORE
##
## Ends in an error in state: 15.
##
## arg -> LEFT_PAREN NONTERMINAL_ID COLON . sort RIGHT_PAREN [ LEFT_PAREN COLON ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN NONTERMINAL_ID COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE 35>

nonterminal_rule__test: NONTERMINAL_ID LEFT_PAREN NONTERMINAL_ID UNDERSCORE
##
## Ends in an error in state: 14.
##
## arg -> LEFT_PAREN NONTERMINAL_ID . COLON sort RIGHT_PAREN [ LEFT_PAREN COLON ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN NONTERMINAL_ID
##

<YOUR SYNTAX ERROR MESSAGE HERE 36>

nonterminal_rule__test: NONTERMINAL_ID LEFT_PAREN UNDERSCORE
##
## Ends in an error in state: 13.
##
## arg -> LEFT_PAREN . NONTERMINAL_ID COLON sort RIGHT_PAREN [ LEFT_PAREN COLON ]
##
## The known suffix of the stack is as follows:
## LEFT_PAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE 37>

nonterminal_rule__test: NONTERMINAL_ID UNDERSCORE
##
## Ends in an error in state: 12.
##
## nonterminal_rule -> NONTERMINAL_ID . option(args) ASSIGN option(BAR) separated_nonempty_list(BAR,operator_match) [ NONTERMINAL_ID EOF ]
##
## The known suffix of the stack is as follows:
## NONTERMINAL_ID
##

<YOUR SYNTAX ERROR MESSAGE HERE 38>

nonterminal_rule__test: UNDERSCORE
##
## Ends in an error in state: 84.
##
## nonterminal_rule__test' -> . nonterminal_rule__test [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE 39>

language: TERMINAL_ID ASSIGN REGEX UNDERSCORE
##
## Ends in an error in state: 9.
##
## nonempty_list(terminal_rule) -> terminal_rule . [ NONTERMINAL_ID ]
## nonempty_list(terminal_rule) -> terminal_rule . nonempty_list(terminal_rule) [ NONTERMINAL_ID ]
##
## The known suffix of the stack is as follows:
## terminal_rule
##

<YOUR SYNTAX ERROR MESSAGE HERE 40>

language: TERMINAL_ID ASSIGN UNDERSCORE
##
## Ends in an error in state: 6.
##
## terminal_rule -> TERMINAL_ID ASSIGN . REGEX [ TERMINAL_ID NONTERMINAL_ID EOF ]
## terminal_rule -> TERMINAL_ID ASSIGN . STRING [ TERMINAL_ID NONTERMINAL_ID EOF ]
##
## The known suffix of the stack is as follows:
## TERMINAL_ID ASSIGN
##

<YOUR SYNTAX ERROR MESSAGE HERE 41>

language: TERMINAL_ID UNDERSCORE
##
## Ends in an error in state: 5.
##
## terminal_rule -> TERMINAL_ID . ASSIGN REGEX [ TERMINAL_ID NONTERMINAL_ID EOF ]
## terminal_rule -> TERMINAL_ID . ASSIGN STRING [ TERMINAL_ID NONTERMINAL_ID EOF ]
##
## The known suffix of the stack is as follows:
## TERMINAL_ID
##

<YOUR SYNTAX ERROR MESSAGE HERE 42>

language: UNDERSCORE
##
## Ends in an error in state: 4.
##
## language' -> . language [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE 43>

capture_number: DOLLAR UNDERSCORE
##
## Ends in an error in state: 1.
##
## capture_number -> DOLLAR . NAT [ # ]
##
## The known suffix of the stack is as follows:
## DOLLAR
##

<YOUR SYNTAX ERROR MESSAGE HERE 44>

capture_number: UNDERSCORE
##
## Ends in an error in state: 0.
##
## capture_number' -> . capture_number [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

